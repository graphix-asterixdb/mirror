/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
SET `graphix.compiler.permit.unbounded-all-paths` "true";

-- param compile-only:string=true
-- param optimized-logical-plan:string=true
-- param plan-format:string=string

EXPLAIN
FROM
    GRAPH SNB.Native.SNBGraph
        (person:Person)<-[:HAS_CREATOR]-(post:Message),
        (post)<-[:REPLY_OF*]-(message:Message)
WHERE
    post.isPost AND
    ( post.creationDate BETWEEN DATETIME("2010-11-15T00:00:00.000Z") AND DATETIME("2010-11-27T00:00:00.000Z") ) AND
    ( message.creationDate BETWEEN DATETIME("2010-11-15T00:00:00.000Z") AND DATETIME("2010-11-27T00:00:00.000Z") )
GROUP BY
    person
SELECT
    person.id                  AS personId,
    person.firstName           AS firstName,
    person.lastName            AS lastName,
    COUNT(DISTINCT post.id)    AS threadCount,
    COUNT(DISTINCT message.id) AS messageCount
ORDER BY
    messageCount DESC,
    personId ASC
LIMIT
    100;
