/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
SET `graphix.evaluation.prefer-indexnl` "true";

-- param compile-only:string=true
-- param optimized-logical-plan:string=true
-- param plan-format:string=string

EXPLAIN
FROM
    GRAPH SNB.Native.SNBGraph
        (person:Person WHERE person.id = 14),
        (person)<-[:HAS_CREATOR]-(message:Message),
        (message)<-[likes:LIKES]-(friend:Person)
LET
    isNew = friend.id NOT IN person.knows
GROUP BY
    friend,
    isNew
    GROUP AS g
LET
    likeInfo = (
        FROM
            g
        SELECT
            g.likes.creationDate,
            g.message
        ORDER BY
            g.likes.creationDate DESC,
            g.message.id ASC
        LIMIT
            1
    )[0],
    latency = GET_DAY_TIME_DURATION(likeInfo.creationDate - likeInfo.message.creationDate)
SELECT
    friend.id                                                      AS personId,
    friend.firstName                                               AS personFirstName,
    friend.lastName                                                AS personLastName,
    UNIX_TIME_FROM_DATETIME_IN_MS(likeInfo.creationDate)           AS likeCreationDate,
    likeInfo.message.id                                            AS messageId,
    COALESCE(likeInfo.message.content, likeInfo.message.imageFile) AS messageContent,
    MS_FROM_DAY_TIME_DURATION(latency) / 60000.0                   AS minutesLatency,
    isNew                                                          AS isNew
ORDER BY
    likeCreationDate DESC,
    personId ASC
LIMIT
    10;