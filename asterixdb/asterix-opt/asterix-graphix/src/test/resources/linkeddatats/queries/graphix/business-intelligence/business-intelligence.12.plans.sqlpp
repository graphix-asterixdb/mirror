/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
SET `graphix.compiler.permit.unbounded-all-paths` "true";

-- param compile-only:string=true
-- param optimized-logical-plan:string=true
-- param plan-format:string=string

EXPLAIN
LET
    personMessages = (
        FROM
            GRAPH SNB.Native.SNBGraph
                (person:Person)
            LEFT MATCH
                (person)<-[:HAS_CREATOR]-(message:Message)-[:REPLY_OF*]->(post:Message)
        WHERE
            message.content IS NOT NULL AND
            message.length < 10000 AND
            message.creationDate > DATETIME("2012-12-15T00:00:00.000Z") AND
            post.language IN [ "az", "en" ] AND
            post.isPost
        GROUP BY
            person.id AS personId
        SELECT
            personId          AS personId,
            COUNT(message.id) AS messageCount
    )
FROM
    personMessages pm
GROUP BY
    pm.messageCount
SELECT
    pm.messageCount    AS messageCount,
    COUNT(pm.personId) AS personCount
ORDER BY
    personCount DESC,
    messageCount DESC;
