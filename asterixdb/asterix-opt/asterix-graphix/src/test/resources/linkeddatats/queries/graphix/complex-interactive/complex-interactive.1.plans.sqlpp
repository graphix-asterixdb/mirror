/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
SET `graphix.evaluation.prefer-indexnl` "true";

-- param compile-only:string=true
-- param optimized-logical-plan:string=true
-- param plan-format:string=string

EXPLAIN
FROM
    GRAPH SNB.Native.SNBGraph
        (person:Person WHERE person.id = 10995116277782),
        (person)-[p:KNOWS{1,3}]->(otherPerson:Person),
        (otherPerson)-[:IS_LOCATED_IN]->(locationCity:City)
LET
    companies = (
        FROM
            otherPerson.companies opc,
            GRAPH SNB.Native.SNBGraph
                (company:Company)-[:IS_LOCATED_IN]->(companyCountry:Country)
        WHERE
            opc.organizationId /*+indexnl*/ = company.id
        SELECT
            company.name        AS companyName,
            company.workFrom    AS workFrom,
            companyCountry.name AS countryName
    ),
    universities = (
        FROM
            otherPerson.universities opu,
            GRAPH SNB.Native.SNBGraph
                (university:University)-[:IS_LOCATED_IN]->(universityCity:City)
        WHERE
            opu.organizationId /*+indexnl*/ = university.id
        SELECT
            university.name      AS universityName,
            university.classYear AS classYear,
            universityCity.name  AS cityName
    )
WHERE
    otherPerson.firstName = "Hossein"
GROUP BY
    person.id,
    otherPerson.id,
    otherPerson,
    locationCity,
    companies,
    universities
SELECT
    otherPerson.id                                          AS friendId,
    otherPerson.lastName                                    AS friendLastName,
    MIN(LEN(EDGES(p)))                                      AS distanceFromPerson,
    UNIX_TIME_FROM_DATE_IN_MS(otherPerson.birthday)         AS friendBirthday,
    UNIX_TIME_FROM_DATETIME_IN_MS(otherPerson.creationDate) AS friendCreationDate,
    otherPerson.gender                                      AS friendGender,
    otherPerson.browserUsed                                 AS friendBrowserUsed,
    otherPerson.locationIP                                  AS friendLocationIp,
    otherPerson.email                                       AS friendEmails,
    otherPerson.speaks                                      AS friendLanguages,
    locationCity.name                                       AS friendCityName,
    universities                                            AS friendUniversities,
    companies                                               AS friendCompanies
ORDER BY
    distanceFromPerson ASC,
    otherPerson.lastName ASC,
    otherPerson.id ASC
    LIMIT
    20;
