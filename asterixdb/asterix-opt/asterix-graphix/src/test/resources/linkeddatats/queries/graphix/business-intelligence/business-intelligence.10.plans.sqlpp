/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
SET `graphix.semantics.pattern` "edge-isomorphism";

-- param compile-only:string=true
-- param optimized-logical-plan:string=true
-- param plan-format:string=string

EXPLAIN
LET
    expertCandidates = (
        FROM
            GRAPH SNB.Native.SNBGraph
                (person:Person)-[k:KNOWS{1,3}]->(expertCandidatePerson:Person)
        WHERE
            person.id = 14
        GROUP BY
            person.id                AS personId,
            expertCandidatePerson.id AS expertCandidatePersonId
        HAVING
            MIN(LEN(EDGES(k))) BETWEEN 2 AND 3
        SELECT VALUE
            expertCandidatePersonId
    )
FROM
    expertCandidates ec,
    GRAPH SNB.Native.SNBGraph
        (expertCandidatePerson:Person)-[:IS_LOCATED_IN]->(:City)-[:IS_PART_OF]->(country:Country),
        (expertCandidatePerson)<-[:HAS_CREATOR]-(message:Message)-[:HAS_TAG]->(:Tag)-[:HAS_TYPE]->(tagClass:TagClass),
        (message)-[:HAS_TAG]->(tag:Tag)
WHERE
    ec = expertCandidatePerson.id AND
    country.name = "China" AND
    tagClass.name = "OfficeHolder"
GROUP BY
    expertCandidatePerson.id AS personId,
    tag                      AS tag
SELECT
    personId                 AS personId,
    tag.name                 AS name,
    COUNT(DISTINCT message)  AS messageCount
ORDER BY
    messageCount DESC,
    tag.name ASC,
    personId ASC
LIMIT
    100;
