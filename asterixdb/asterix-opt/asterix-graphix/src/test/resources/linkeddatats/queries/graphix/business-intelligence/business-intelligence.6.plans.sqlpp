/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

-- param compile-only:string=true
-- param optimized-logical-plan:string=true
-- param plan-format:string=string

EXPLAIN
FROM
    (
        FROM
            GRAPH SNB.Native.SNBGraph
                (tag:Tag WHERE tag.name = "Bukovina"),
                (tag)<-[:HAS_TAG]-(message1:Message),
                (message1)-[:HAS_CREATOR]->(person1:Person)
            LEFT MATCH
                (message1)<-[:LIKES]-(person2:Person),
                (person2)<-[:HAS_CREATOR]-(message2:Message)
            LEFT MATCH
                (message2)<-[:LIKES]-(person3:Person)
        GROUP BY
            person1.id AS person1Id,
            person2.id AS person2Id
        SELECT
            person1Id,
            person2Id,
            COUNT(person3.id) AS popularityScore
    ) t
GROUP BY
    t.person1Id AS person1Id
SELECT
    person1Id              AS personId,
    SUM(t.popularityScore) AS authorityScore
ORDER BY
    authorityScore DESC,
    person1Id ASC
LIMIT
    100;
