distribute result [$$240]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$240])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$240] <- [{"user_id": $$263, "review_id": $$262}]
      -- ASSIGN  |PARTITIONED|
        project ([$$262, $$263])
        -- STREAM_PROJECT  |PARTITIONED|
          select (neq($$250, 0))
          -- STREAM_SELECT  |PARTITIONED|
            exchange
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              group by ([$$262 := $$265; $$263 := $$266]) decor ([]) {
                        aggregate [$$250] <- [agg-sum($$264)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- AGGREGATE  |LOCAL|
                          nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- NESTED_TUPLE_SOURCE  |LOCAL|
                     }
              -- SORT_GROUP_BY[$$265, $$266]  |PARTITIONED|
                exchange
                -- HASH_PARTITION_EXCHANGE [$$265, $$266]  |PARTITIONED|
                  group by ([$$265 := $$242; $$266 := $$243]) decor ([]) {
                            aggregate [$$264] <- [agg-count(1)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- AGGREGATE  |LOCAL|
                              select (and(not(eq($$244, $$245)), not(is-missing($$244)))) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- STREAM_SELECT  |LOCAL|
                                nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                         }
                  -- PRE_CLUSTERED_GROUP_BY[$$242, $$243]  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      order (ASC, $$242) (ASC, $$243)
                      -- STABLE_SORT [$$242(ASC), $$243(ASC)]  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          project ([$$244, $$245, $$242, $$243])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              left-outer-unnest-map [$$244, $$245, $COPY_OF(#2,1)] <- index-search("Friends", 0, "Yelp", "Friends", true, true, 1, $$243, 1, $$243, true, true, true)
                              -- BTREE_SEARCH  |PARTITIONED|
                                exchange
                                -- BROADCAST_EXCHANGE  |PARTITIONED|
                                  project ([$$242, $$243])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    exchange
                                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                      data-scan []<-[$$242, $$243, $COPY_OF(r,1)] <- Yelp.Reviews
                                      -- DATASOURCE_SCAN  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          empty-tuple-source
                                          -- EMPTY_TUPLE_SOURCE  |PARTITIONED|