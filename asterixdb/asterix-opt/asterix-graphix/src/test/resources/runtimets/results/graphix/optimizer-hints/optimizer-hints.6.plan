distribute result [$$305]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    distinct ([$$305])
    -- PRE_SORTED_DISTINCT_BY  |PARTITIONED|
      exchange
      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
        order (ASC, $$305)
        -- STABLE_SORT [$$305(ASC)]  |PARTITIONED|
          exchange
          -- HASH_PARTITION_EXCHANGE [$$305]  |PARTITIONED|
            project ([$$305])
            -- STREAM_PROJECT  |PARTITIONED|
              assign [$$305] <- [{"u1_user_id": $$308, "u2_user_id": $$306}]
              -- ASSIGN  |PARTITIONED|
                select (not(eq($$308, $$306)))
                -- STREAM_SELECT  |PARTITIONED|
                  project ([$$308, $$306])
                  -- STREAM_PROJECT  |PARTITIONED|
                    assign [$$306] <- [$COPY_OF(u2,3).getField(0)]
                    -- ASSIGN  |PARTITIONED|
                      project ([$COPY_OF(u2,3), $$308])
                      -- STREAM_PROJECT  |PARTITIONED|
                        select (ge(optimized-edge-count($COPY_OF(#1,6)), 1))
                        -- STREAM_SELECT  |PARTITIONED|
                          marker-sink
                          -- MARKER_SINK  |PARTITIONED|
                            exchange
                            -- STATE_RELEASE (ONE_TO_ONE_EXCHANGE)  |PARTITIONED|
                              recursive-head [$COPY_OF(#1,3) <- $COPY_OF(#1,6),$#2 <- $COPY_OF(u2,3)]
                              -- RECURSIVE_HEAD  |PARTITIONED|
                                exchange
                                -- STATE_RELEASE (ONE_TO_ONE_EXCHANGE)  |PARTITIONED|
                                  project ([$COPY_OF(#1,6), $COPY_OF(u2,3), $$308])
                                  -- STATE_RELEASE (STREAM_PROJECT)  |PARTITIONED|
                                    exchange
                                    -- STATE_RELEASE (ONE_TO_ONE_EXCHANGE)  |PARTITIONED|
                                      fixed-point [$COPY_OF(#1,6) <- ($COPY_OF(#1,2),$COPY_OF(#1,4)) $COPY_OF(u2,3) <- ($COPY_OF(u2,2),$COPY_OF(#3,1))] {
                                                exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                -- STATE_RELEASE (ONE_TO_ONE_EXCHANGE)  |PARTITIONED|
                                                  project ([$COPY_OF(#1,4), $COPY_OF(#3,1), $$308]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                  -- STATE_RELEASE (STREAM_PROJECT)  |PARTITIONED|
                                                    distinct ([$$308, $$309, $$310]) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                    -- STATE_RELEASE (LOCAL_TOP_K)  |PARTITIONED|
                                                      exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                      -- STATE_RELEASE (HASH_PARTITION_EXCHANGE [$$308, $$309, $$310])  |PARTITIONED|
                                                        assign [$COPY_OF(#1,4)] <- [append-to-existing-path($COPY_OF(#3,1), $COPY_OF(#4,2), $COPY_OF(#1,3))] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                        -- STATE_RELEASE (ASSIGN)  |PARTITIONED|
                                                          select (is-distinct-everything($COPY_OF(#3,1), $COPY_OF(#4,2), $COPY_OF(#1,3))) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                          -- STATE_RELEASE (STREAM_SELECT)  |PARTITIONED|
                                                            assign [$COPY_OF(#3,1), $COPY_OF(#4,2)] <- [{"user_id": $$310}, {"user_id": $$309, "friend": $$310}] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                            -- STATE_RELEASE (ASSIGN)  |PARTITIONED|
                                                              exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                              -- STATE_RELEASE (ONE_TO_ONE_EXCHANGE)  |PARTITIONED|
                                                                unnest-map [$$309, $$310, $COPY_OF(#4,1)] <- index-search("Friends", 0, "Yelp", "Friends", true, true, 1, $$315, 1, $$315, true, true, true) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                                -- STATE_RELEASE (BTREE_SEARCH)  |PARTITIONED|
                                                                  exchange [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                                  -- STATE_RELEASE (BROADCAST_EXCHANGE)  |PARTITIONED|
                                                                    assign [$$315] <- [$#2.getField(0)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                                    -- STATE_RELEASE (ASSIGN)  |PARTITIONED|
                                                                      recursive-tail [$COPY_OF(#1,3) <- ($COPY_OF(#1,2),$COPY_OF(#1,6)), $#2 <- ($COPY_OF(u2,2),$COPY_OF(u2,3))] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                                                      -- RECURSIVE_TAIL  |PARTITIONED|
                                             }
                                      -- FIXED_POINT  |PARTITIONED|
                                        exchange
                                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                          project ([$COPY_OF(#1,2), $COPY_OF(u2,2), $$308])
                                          -- STREAM_PROJECT  |PARTITIONED|
                                            assign [$COPY_OF(#1,2)] <- [create-new-zero-hop-path($COPY_OF(u2,2))]
                                            -- ASSIGN  |PARTITIONED|
                                              assign [$COPY_OF(u2,2)] <- [{"user_id": $$308}]
                                              -- ASSIGN  |PARTITIONED|
                                                project ([$$308])
                                                -- STREAM_PROJECT  |PARTITIONED|
                                                  exchange
                                                  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                    data-scan []<-[$$308, $COPY_OF(u1,2)] <- Yelp.Users
                                                    -- DATASOURCE_SCAN  |PARTITIONED|
                                                      exchange
                                                      -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                        empty-tuple-source
                                                        -- EMPTY_TUPLE_SOURCE  |PARTITIONED|
