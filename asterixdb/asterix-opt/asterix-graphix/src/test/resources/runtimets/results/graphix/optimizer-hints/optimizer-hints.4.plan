distribute result [$$314]
-- DISTRIBUTE_RESULT  |PARTITIONED|
  exchange
  -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
    project ([$$314])
    -- STREAM_PROJECT  |PARTITIONED|
      assign [$$314] <- [{"u1_user_id": $$342, "u2_user_id": $$342, "review_id": $$341}]
      -- ASSIGN  |PARTITIONED|
        project ([$$341, $$342])
        -- STREAM_PROJECT  |PARTITIONED|
          select (neq($$330, 0))
          -- STREAM_SELECT  |PARTITIONED|
            exchange
            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
              group by ([$$341 := $$346; $$342 := $$347]) decor ([]) {
                        aggregate [$$330] <- [agg-sum($$345)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                        -- AGGREGATE  |LOCAL|
                          nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                          -- NESTED_TUPLE_SOURCE  |LOCAL|
                     }
              -- SORT_GROUP_BY[$$346, $$347]  |PARTITIONED|
                exchange
                -- HASH_PARTITION_EXCHANGE [$$346, $$347]  |PARTITIONED|
                  group by ([$$346 := $$322; $$347 := $$323]) decor ([]) {
                            aggregate [$$345] <- [agg-count(1)] [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                            -- AGGREGATE  |LOCAL|
                              select (and(eq($$325, $$323), not(eq($$324, $$325)), not(is-missing($$324)))) [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                              -- STREAM_SELECT  |LOCAL|
                                nested tuple source [cardinality: 0.0, op-cost: 0.0, total-cost: 0.0]
                                -- NESTED_TUPLE_SOURCE  |LOCAL|
                         }
                  -- PRE_CLUSTERED_GROUP_BY[$$322, $$323]  |PARTITIONED|
                    exchange
                    -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                      order (ASC, $$322) (ASC, $$323)
                      -- STABLE_SORT [$$322(ASC), $$323(ASC)]  |PARTITIONED|
                        exchange
                        -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                          project ([$$325, $$323, $$324, $$322])
                          -- STREAM_PROJECT  |PARTITIONED|
                            exchange
                            -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                              left-outer-unnest-map [$$324, $$325, $COPY_OF(#3,1)] <- index-search("Friends", 0, "Yelp", "Friends", true, true, 1, $$323, 1, $$323, true, true, true)
                              -- BTREE_SEARCH  |PARTITIONED|
                                exchange
                                -- BROADCAST_EXCHANGE  |PARTITIONED|
                                  project ([$$322, $$323])
                                  -- STREAM_PROJECT  |PARTITIONED|
                                    select (and(not($$352), not(and($$352, eq($$322, $$322)))))
                                    -- STREAM_SELECT  |PARTITIONED|
                                      assign [$$352] <- [eq($$323, $$323)]
                                      -- ASSIGN  |PARTITIONED|
                                        project ([$$322, $$323])
                                        -- STREAM_PROJECT  |PARTITIONED|
                                          exchange
                                          -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                            data-scan []<-[$$322, $$323, $COPY_OF(r,1)] <- Yelp.Reviews
                                            -- DATASOURCE_SCAN  |PARTITIONED|
                                              exchange
                                              -- ONE_TO_ONE_EXCHANGE  |PARTITIONED|
                                                empty-tuple-source
                                                -- EMPTY_TUPLE_SOURCE  |PARTITIONED|