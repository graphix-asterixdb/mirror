/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// A link-only query optimization should not be applied for u.
WITH
    GRAPH YelpGraph AS
        VERTEX (:User)
            PRIMARY KEY (user_id)
            AS Yelp.Users,
        EDGE (:User)-[:FRIENDS_WITH]->(:User)
            SOURCE KEY      (user_id)
            DESTINATION KEY (friend)
            AS (
                FROM
                    Yelp.Friends F
                SELECT
                    F.user_id AS user_id,
                    F.friend  AS friend
            )
FROM
    GRAPH YelpGraph
        (u)->(v)
GROUP BY
    u.user_id,
    v.user_id
    GROUP AS g
LET
    v = (
        FROM
            g gi
        SELECT
            gi.u.name    AS name,
            gi.v.user_id AS user_id
    )[0]
SELECT
    v
ORDER BY
    v;
