/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

DROP DATAVERSE Yelp IF EXISTS;
CREATE DATAVERSE Yelp;
USE Yelp;

CREATE TYPE KnowsType AS {
    user_id: bigint,
    friend: bigint
};
CREATE TYPE UsersType AS {
    user_id: bigint
};
CREATE TYPE PostsType AS {
    post_id: string,
    user_id: bigint
};
CREATE DATASET Knows (KnowsType) PRIMARY KEY user_id, friend;
CREATE DATASET Users (UsersType) PRIMARY KEY user_id;
CREATE DATASET Posts (PostsType) PRIMARY KEY post_id;

CREATE INDEX postsUserIdx ON Posts (user_id);
CREATE INDEX knowsFriendIdx ON Knows (friend);

CREATE GRAPH YelpGraph AS
    VERTEX (:User)
        PRIMARY KEY (user_id)
        AS Yelp.Users,
    VERTEX (:Post)
        PRIMARY KEY (post_id)
        AS Yelp.Posts,
    EDGE (:User)-[:KNOWS]->(:User)
        SOURCE KEY      (user_id)
        DESTINATION KEY (friend)
        AS FROM Yelp.Knows k SELECT VALUE k,
    EDGE (:User)-[:POSTS]->(:Post)
        SOURCE KEY      (user_id)
        DESTINATION KEY (post_id)
        AS FROM Yelp.Posts p SELECT VALUE p;
