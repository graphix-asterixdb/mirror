/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

-- LEFT-MATCH query, with destination of the second LEFT-MATCH edge acting as connecting vertex.
WITH
    GRAPH YelpGraph AS
        VERTEX (:User)
            PRIMARY KEY (user_id)
            AS (
                FROM
                    Yelp.Users U
                WHERE
                    U.group_id = 5
                SELECT
                    U.user_id
            ),
        VERTEX (:Review)
            PRIMARY KEY (review_id)
            AS (
                FROM
                    Yelp.Reviews R
                WHERE
                    R.group_id = 5
                SELECT
                    R.review_id
            ),
        EDGE (:Review)-[:MADE_BY]->(:User)
            SOURCE KEY      (review_id)
            DESTINATION KEY (user_id)
            AS (
                FROM
                    Yelp.Reviews R
                WHERE
                    R.group_id = 5
                SELECT
                    R.review_id AS review_id,
                    R.user_id   AS user_id
            ),
        EDGE (:User)-[:FRIENDS_WITH]->(:User)
            SOURCE KEY      (user_id)
            DESTINATION KEY (friend)
            AS (
                FROM
                    Yelp.Friends F
                WHERE
                    F.group_id = 5
                SELECT
                    F.user_id AS user_id,
                    F.friend  AS friend
            )
FROM
    GRAPH YelpGraph
        (u2:User)<-[fw1:FRIENDS_WITH]-(u1:User)
    LEFT MATCH
        (u3:User)<-[mb:MADE_BY]-(r:Review),
        (u1)<-[fw2:FRIENDS_WITH]-(u3)
SELECT
    u1.user_id   AS u1_user_id,
    fw1.user_id  AS fw1_user_id,
    fw1.friend   AS fw1_friend,
    u2.user_id   AS u2_user_id,
    u3.user_id   AS u3_user_id,
    mb.user_id   AS mb_user_id,
    mb.review_id AS mb_review_id,
    r.review_id  AS r_review_id,
    fw2.user_id  AS fw2_user_id,
    fw2.friend   AS fw2_friend
ORDER BY
    u1_user_id,
    u2_user_id,
    u3_user_id,
    r_review_id;