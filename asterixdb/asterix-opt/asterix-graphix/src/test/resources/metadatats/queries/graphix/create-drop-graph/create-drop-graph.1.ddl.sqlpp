/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

DROP DATAVERSE Yelp IF EXISTS;
DROP DATAVERSE Yelp_A IF EXISTS;
DROP DATAVERSE Yelp_B IF EXISTS;
CREATE DATAVERSE Yelp;
CREATE DATAVERSE Yelp_A;
CREATE DATAVERSE Yelp_B;

USE Yelp_A;
CREATE TYPE GenericType AS { _id: uuid };
CREATE DATASET Businesses (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Checkins (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Friends (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Reviews (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Tips (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Users (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE FUNCTION RelevantBusinesses() {
    FROM
        Businesses B
    WHERE
        B.stars > 3.5
    SELECT
        B.*
};

USE Yelp_B;
CREATE TYPE GenericType AS { _id: uuid };
CREATE DATASET Businesses (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Checkins (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Friends (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Reviews (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Tips (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE DATASET Users (GenericType) PRIMARY KEY _id AUTOGENERATED;
CREATE SYNONYM Yelpers FOR Users;

USE Yelp;
CREATE GRAPH YelpGraph_1 AS
    VERTEX (:User)
        PRIMARY KEY (user_id)
        AS Yelp_B.Yelpers,
    VERTEX (:Review)
        PRIMARY KEY (review_id)
        AS ( FROM Yelp_A.Reviews R SELECT VALUE R ),
    VERTEX (:Business)
        PRIMARY KEY (business_id)
        AS ( FROM Yelp_A.RelevantBusinesses() B SELECT VALUE B ),
    EDGE (:User)-[:FRIENDS_WITH]->(:User)
        SOURCE KEY      (user_id)
        DESTINATION KEY (friend)
        AS (
            FROM
                Yelp_B.Users U
                UNNEST
                    U.friends F
            SELECT
                U.user_id AS user_id,
                F         AS friend
        ),
    EDGE (:Review)-[:MADE_BY]->(:User)
        SOURCE KEY      (review_id)
        DESTINATION KEY (user_id)
        AS (
            FROM
                Yelp_A.Reviews R
            SELECT
                R.review_id AS review_id,
                R.user_id   AS user_id
        ),
    EDGE (:Review)-[:ABOUT]->(:Business)
        SOURCE KEY      (review_id)
        DESTINATION KEY (business_id)
        AS (
            FROM
                Yelp_A.Reviews R
            SELECT
                R.review_id   AS review_id,
                R.business_id AS business_id
        );

CREATE GRAPH YelpGraph_2 IF NOT EXISTS AS
    VERTEX (:Review)
        PRIMARY KEY (review_id)
        AS FROM Yelp_A.Reviews R SELECT VALUE R,
    VERTEX (:Business)
        PRIMARY KEY (business_id)
        AS ( FROM Yelp_A.RelevantBusinesses() B SELECT VALUE B ),
    EDGE (:Review)-[:ABOUT]->(:Business)
        SOURCE KEY      (review_id)
        DESTINATION KEY (business_id)
        AS FROM Yelp_A.Reviews R SELECT VALUE R;

CREATE GRAPH YelpGraph_2 IF NOT EXISTS AS
    VERTEX (:Review)
        PRIMARY KEY (review_id)
        AS FROM Yelp_A.Reviews R SELECT VALUE R,
    VERTEX (:Business)
        PRIMARY KEY (business_id)
        AS ( FROM Yelp_A.RelevantBusinesses() B SELECT VALUE B ),
    EDGE (:Review)-[:ABOUT]->(:Business)
        SOURCE KEY      (review_id)
        DESTINATION KEY (business_id)
        AS FROM Yelp_A.Reviews R SELECT VALUE R;