/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

let
test = [
  'true',
  'false"',
  int8('8'),
  int16('16'),
  int32('32'),
  int64('64'),
  float('1.25'),
  double('2.5'),
  true,
  false,
  datetime('2020-01-02T03:04:05Z'),
  date('2021-01-02'),
  time('01:02:03'),
  duration('P30Y10M25DT13H12M50S'),
  year_month_duration('P2Y'),
  day_time_duration('P4S'),
  uuid('02a199ca-bf58-412e-bd9f-60a0c975a8ac'),
  base64('0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM+/')
],
testNull = [
  null,
  [],
  {}
],
testMissing = [
  missing
]

select 0 g, i, string(test[i]) actual
from range(0, len(test)-1) i
union all
select 1 g, i, null expected, string(testNull[i]) actual
from range(0, len(testNull)-1) i
union all
select 2 g, i, true expected, string(testMissing[i]) is missing actual
from range(0, len(testMissing)-1) i
order by g, i;
