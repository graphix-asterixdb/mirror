/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

let
testFalse = [
  false,
  test.boolean('false'),
  int8(0),
  int16(0),
  int32(0),
  int64(0),
  float(0),
  float("NaN"),
  double(0),
  double("NaN"),
  'false'
],
testTrue = [
  true,
  int8(1),
  int8(2),
  int16(1),
  int16(-1),
  int32(1),
  int32(2),
  int64(1),
  int64(3),
  float(1),
  float("INF"),
  float("-INF"),
  double(1),
  double("INF"),
  double("-INF"),
  'true'
],
testNull = [
  null,
  'TRUE',
  'FALSE',
  'abc',
  date('1970-01-01'),
  datetime('1970-01-01T00:00:00Z'),
  time("00:00:00"),
  duration('PT0H'),
  year_month_duration('P0Y0M'),
  day_time_duration('P0D'),
  [],
  [null],
  {},
  {"a":null}
],
testMissing = [
  missing
]

select 0 g, i, false expected, boolean(testFalse[i]) actual
from range(0, len(testFalse)-1) i
union all
select 1 g, i, true expected, boolean(testTrue[i]) actual
from range(0, len(testTrue)-1) i
union all
select 2 g, i, null expected, boolean(testNull[i]) actual
from range(0, len(testNull)-1) i
union all
select 3 g, i, true expected, boolean(testMissing[i]) is missing actual
from range(0, len(testMissing)-1) i
order by g, i;
