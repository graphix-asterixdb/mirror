/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 * This query does not make a logical sense; however,
 * the idea here is to test that a hash-join can be used when we have a case
 * where one relation uses one attribute to join on two attributes on the
 * the other relation
 */

USE tpch;

-- Disabled for a simpler plan
SET `compiler.sort.parallel` "false";
SET `compiler.parallelism` "0";

EXPLAIN
SELECT o.o_orderkey, l.l_orderkey, l.l_suppkey
FROM            Orders o
LEFT OUTER JOIN LineItem l
             ON o.o_orderkey = l.l_orderkey
            AND o.o_orderkey = l.l_suppkey
ORDER BY o.o_orderkey, l.l_orderkey, l.l_suppkey
