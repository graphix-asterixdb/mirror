/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 *  Description     : Full-text search index test
 *                  : This test is intended to verify that the full-text search works as expected
 *                  : with multiple conditions.
 *                  : query #3 - two string values in [an ordered list] query with "any" option
 *                  :            in this case, "any" option that enforces a disjunctive search will be applied.
 *                  : query #4 - the same as query #3, but with a different option - "all"
 *                  :            in this case, we explicitly specify "all" option that enforces a conjunctive search.
 *                  : query #5 - two string values in {{an unordered list}} query with "any" option
 *                  :            in this case, "any" option that enforces a disjunctive search will be applied.
 *                  : query #6 - the same as query #6, but with a different option - "all"
 *                  :            in this case, we explicitly specify "all" option that enforces a conjunctive search.
 *                  : query #7 - the same as query #4, but without any option that is equivalent to "all".
 *                  : query #8 - the same as query #6, but without any option that is equivalent to "all".
 *  Expected Result : Success
 *
*/

drop dataverse test if exists;
create dataverse test;
use test;

create type MyRecord as closed {
  id: int64,
  docid: int64,
  val1: int64,
  title: string,
  point: point,
  kwds: string,
  line1: line,
  line2: line,
  poly1: polygon,
  poly2: polygon,
  rec: rectangle,
  circle: circle
};

create dataset MyData(MyRecord)
  primary key id;

create index fulltext_index_title on MyData(title) type fulltext;
