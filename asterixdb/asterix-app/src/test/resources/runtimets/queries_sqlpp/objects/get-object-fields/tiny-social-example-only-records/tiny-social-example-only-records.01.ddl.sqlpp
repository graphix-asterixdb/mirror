/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
* Description  : Testing get-object-fields under different queries.
* Expected Res : Success
* Date         : 04 Jun 2015
*/

drop  dataverse TinySocial if exists;
create  dataverse TinySocial;

use TinySocial;


create type TinySocial.TwitterUserType as
{
  `screen-name` : string,
  lang : string,
  friends_count : bigint,
  statuses_count : bigint
};

create type TinySocial.TweetMessageType as
 closed {
  tweetid : string,
  user : TwitterUserType,
  `sender-location` : point?,
  `send-time` : datetime,
  `referred-topics` : {{string}},
  `message-text` : string
};

create type TinySocial.EmploymentType as
{
  `organization-name` : string,
  `start-date` : date,
  `end-date` : date?
};

create type TinySocial.FacebookUserType as
 closed {
  id : bigint,
  alias : string,
  name : string,
  `user-since` : datetime,
  `friend-ids` : {{bigint}},
  employment : [EmploymentType]
};

create type TinySocial.FacebookMessageType as
 closed {
  `message-id` : bigint,
  `author-id` : bigint,
  `in-response-to` : bigint?,
  `sender-location` : point?,
  message : string
};

create type TinySocial.TwitterUserAlternateType as
{
  `screen-name` : string,
  lang : string,
  friends_count : bigint,
  statuses_count : bigint
};

create type TinySocial.TweetMessageAlternateType as
 closed {
  tweetid : string,
  user : TwitterUserAlternateType,
  `sender-location` : point?,
  `send-time` : datetime,
  `message-text` : string
};

create type TinySocial.EmploymentAlternateType as
{
  `organization-name` : string,
  `start-date` : date,
  `end-date` : date?
};

create type TinySocial.FacebookUserAlternateType as
 closed {
  id : bigint,
  alias : string,
  name : string,
  `user-since` : datetime,
  employment : EmploymentAlternateType
};

create type TinySocial.FacebookMessageAlternateType as
 closed {
  `message-id` : bigint,
  `author-id` : bigint,
  `in-response-to` : bigint?,
  `sender-location` : point?,
  message : string
};

create type TinySocial.TweetMessageType2 as
 {
  tweetid : string,
  user : TwitterUserType?,
  `sender-location` : point?,
  `send-time` : datetime,
  `referred-topics` : {{string}},
  `message-text` : string
};