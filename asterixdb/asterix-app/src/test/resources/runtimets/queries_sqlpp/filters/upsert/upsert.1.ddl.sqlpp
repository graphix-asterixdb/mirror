/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * This test case verify if the filter optimization rule is still correct when there
 * is one upsert on some of the component. The new value should be returned.
 *
 * 1. create the dataset Tweet that ingested by a feed.
 * 2. update one tweet
 * 3. start the feed again to make the previous component flush to disk
 * 4. send the query by the old value to see if any record returns
 */


drop dataverse test if exists;
create dataverse test if not exists;
use test;

create type typeUser if not exists as open {
    id: int64,
    name: string,
    screen_name : string,
    lang : string,
    location: string,
    create_at: date,
    description: string,
    followers_count: int32,
    friends_count: int32,
    statues_count: int64
};

create type typePlace if not exists as open{
    country : string,
    country_code : string,
    full_name : string,
    id : string,
    name : string,
    place_type : string,
    bounding_box : rectangle
};

create type typeGeoTag if not exists as open {
    stateID: int32,
    stateName: string,
    countyID: int32,
    countyName: string,
    cityID: int32?,
    cityName: string?
};

create type typeTweet if not exists as open{
    create_at : datetime,
    id: int64,
    `text`: string,
    in_reply_to_status : int64,
    in_reply_to_user : int64,
    favorite_count : int64,
    coordinate: point?,
    retweet_count : int64,
    lang : string,
    is_retweet: boolean,
    hashtags : {{ string }} ?,
    user_mentions : {{ int64 }} ? ,
    user : typeUser,
    place : typePlace?,
    geo_tag: typeGeoTag
};

create dataset Tweet(typeTweet) primary key id
with filter on create_at
with {
  "merge-policy": {
    "name": "prefix",
    "parameters": { "max-mergable-component-size": 32768, "max-tolerance-component-count": 32 }
  }
};

create index text_idx if not exists on Tweet(`text`) type btree;
create index state_idx if not exists on Tweet(geo_tag.stateID) type btree;

create feed TweetFeed with {
  "adapter-name" : "socket_adapter",
  "sockets" : "127.0.0.1:10001",
  "address-type" : "IP",
  "type-name" : "typeTweet",
  "format" : "adm"
};
