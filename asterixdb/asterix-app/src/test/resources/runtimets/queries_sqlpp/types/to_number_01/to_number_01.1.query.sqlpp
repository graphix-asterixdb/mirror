/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

 {
  "t1": tonumber(false),
  "t2": to_number(true),
  "t3": tonum(int8("8")),
  "t4": to_num(int16("16")),
  "t5": to_number(int32("32")),
  "t6": to_number(int64("64")),
  "t7": to_number(float("1.5")),
  "t8": to_number(double("2.25")),
  "t9": to_number("512"),
  "t10": is_null(to_number("foo")),
  "t11": is_null(to_number([])),
  "t12": is_null(to_number({{}})),
  "t13": is_null(to_number({})),
  "t14": is_null(to_number(null)),
  "t15": is_missing(to_number(missing)),
  "t16": to_string(to_number(float("INF"))),
  "t17": to_string(to_number(float("-INF"))),
  "t18": to_string(to_number(float("NaN"))),
  "t19": to_string(to_number(double("INF"))),
  "t20": to_string(to_number(double("-INF"))),
  "t21": to_string(to_number(double("NaN")))
 };
