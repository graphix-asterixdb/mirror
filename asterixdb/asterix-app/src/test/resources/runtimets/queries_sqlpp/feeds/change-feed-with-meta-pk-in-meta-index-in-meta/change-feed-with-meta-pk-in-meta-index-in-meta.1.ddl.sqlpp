/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description  : Create a change feed with meta-data
 * build secondary index on a meta field and then test ingestion of records
 * Expected Res : Success
 * Date         : 18th Jun 2016
 */

drop dataverse KeyVerse if exists;
create dataverse KeyVerse;
use KeyVerse;

create type DocumentType as open{
};

create type KVMetaType as open{
`key`:string,
vbucket:int32,
seq:int64,
cas:int64,
expiration:int32,
flags:int32,
revSeq:int64,
lockTime:int32
};

create dataset KVStore(DocumentType) with meta(KVMetaType)primary key meta().`key`;

create feed KVChangeStream with {
 "adapter-name" : "adapter",
  "type-name" : "DocumentType",
  "meta-type-name" : "KVMetaType",
  "reader" : "org.apache.asterix.external.input.record.reader.kv.KVTestReaderFactory",
  "parser" : "record-with-metadata",
  "format" : "dcp",
  "record-format" : "json",
  "change-feed" : "true",
  "key-indexes" : "0",
  "key-indicators" : "1",
  "num-of-records" : "1000"
};

create index VBucketIndex on KVStore(meta().vbucket);
