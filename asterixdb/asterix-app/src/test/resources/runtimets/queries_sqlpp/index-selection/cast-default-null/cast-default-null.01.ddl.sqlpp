/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

DROP DATAVERSE test IF EXISTS;
CREATE DATAVERSE test;
USE test;

CREATE TYPE t1 AS { id: int, s_f1: string, s_f2: string?, i_f: int? };

CREATE DATASET ds1(id int not unknown, a string, b int) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds2(id int not unknown, a string, b int) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds3(id int not unknown, a string, b int) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds4(id int not unknown, a string, b int) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds5(id int not unknown) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds6(id int not unknown) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds7(t1) PRIMARY KEY id %with%;

CREATE INDEX idx1 ON ds1(x: int);
CREATE INDEX idx2 ON ds2(x: int) CAST (DEFAULT NULL);
CREATE INDEX idx3 ON ds3(x: int) CAST (DEFAULT NULL);

CREATE INDEX idx5_dt_fmt ON ds5(f_dt_fmt: datetime) CAST (DEFAULT NULL datetime 'MM/DD/YYYY hh:mm:ss.nnna' date 'MM/DD/YYYY');
CREATE INDEX idx5_d_fmt ON ds5(f_d_fmt: date) CAST (DEFAULT NULL date 'MM/DD/YYYY');
CREATE INDEX idx5_t_fmt ON ds5(f_t_fmt: time) CAST (DEFAULT NULL time 'hh:mm:ss.nnna');

CREATE INDEX idx6_dt ON ds6(f_dt: datetime) CAST (DEFAULT NULL);
CREATE INDEX idx6_d ON ds6(f_d: date) CAST (DEFAULT NULL);
CREATE INDEX idx6_t ON ds6(f_t: time) CAST (DEFAULT NULL);

CREATE INDEX idx1 ON ds7(s_f2);
CREATE INDEX idx2 ON ds7(s_f2: string) CAST (DEFAULT NULL);
CREATE INDEX idx3 ON ds7(s_f2: int) CAST (DEFAULT NULL);

CREATE VIEW view1(id int, x int, y int) DEFAULT NULL AS SELECT id, x, y FROM ds1;
CREATE VIEW view2(id int, x int, y int) DEFAULT NULL AS SELECT id, x, y FROM ds2;
CREATE VIEW view3(id int, x string, y int) DEFAULT NULL AS SELECT id, x, y FROM ds3;
CREATE VIEW view4(id int, x int, y int) DEFAULT NULL AS SELECT id, x, y FROM ds4;

CREATE VIEW view5_dt_fmt(id int, f_dt_fmt datetime) DEFAULT NULL
datetime 'MM/DD/YYYY hh:mm:ss.nnna' date 'MM/DD/YYYY' time 'hh:mm:ss.nnna' AS SELECT id, f_dt_fmt FROM ds5;

CREATE VIEW view5_d_fmt(id int, f_d_fmt date) DEFAULT NULL
datetime 'MM/DD/YYYY hh:mm:ss.nnna' date 'MM/DD/YYYY' time 'hh:mm:ss.nnna' AS SELECT id, f_d_fmt FROM ds5;

CREATE VIEW view5_t_fmt(id int, f_t_fmt time) DEFAULT NULL
datetime 'MM/DD/YYYY hh:mm:ss.nnna' date 'MM/DD/YYYY' time 'hh:mm:ss.nnna' AS SELECT id, f_t_fmt FROM ds5;

CREATE VIEW view6_dt(id int, f_dt datetime) DEFAULT NULL AS SELECT id, f_dt FROM ds6;
CREATE VIEW view6_d(id int, f_d date) DEFAULT NULL AS SELECT id, f_d FROM ds6;
CREATE VIEW view6_t(id int, f_t time) DEFAULT NULL AS SELECT id, f_t FROM ds6;

CREATE VIEW view7_1(id int, s_f2 string, i_f int) DEFAULT NULL AS SELECT id, s_f2, i_f FROM ds7;
CREATE VIEW view7_2(id int, s_f2 int, i_f int) DEFAULT NULL AS SELECT id, s_f2, i_f FROM ds7;