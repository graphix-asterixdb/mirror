/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

drop dataverse test1 if exists;
create dataverse test1;

drop dataverse test2 if exists;
create dataverse test2;

use test2;

--- test2

create synonym DataverseSyn2 for Metadata.`Dataverse`;

create function f2() {
  select count(*) as f2 from DataverseSyn2
  where DataverseName like "t%"
};

create view v2 as select sum(r) as v2 from range(1,2) r;

--- test1

create synonym test1.DataverseSyn1 for Metadata.`Dataverse`;

create view test1.v1 as select sum(r) as v1 from range(1,3) r;

create function test1.f1() {
  select count(*) as f1 from DataverseSyn1
  where DataverseName like "t%"
};

create view test1.vA as
  select v1.*, v2.*, f1.*, f2.*, s1.*, s2.*, d1.*
  from
    v1 v1,
    test2.v2 v2,
    f1() f1,
    test2.f2() f2,
    (
      select count(*) as s1 from DataverseSyn1
        where DataverseName like "te%"
    ) s1,
    (
      select count(*) as s2 from test2.DataverseSyn2
        where DataverseName like "tes%"
    ) s2,
    (
      select count(*) as d1 from Metadata.`Dataverse`
      where DataverseName like "test%"
    ) d1;
