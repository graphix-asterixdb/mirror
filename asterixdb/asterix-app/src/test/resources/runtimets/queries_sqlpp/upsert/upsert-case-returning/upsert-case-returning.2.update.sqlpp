/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description  : Test for issue ASTERIXDB-2400
 * Expected Res : Success
 * Date         : Jun 2018
 */
use test;

upsert into subscriptions as record(
(let v = (select value s from subscriptions s where param0 = "HenryGale")
select value (CASE (array_count(v) > 0)
WHEN true THEN
{"subscriptionId":v[0].subscriptionId, "param0": v[0].param0,
"brokerSubscriptions":(select value sub from v[0].brokerSubscriptions sub UNION ALL
  select value val from [{"brokerSubscriptionId":create_uuid(),
  "brokerDataverse":"dataverse1","brokerName":"broker1","created":current_datetime()}] val)}
ELSE
{"subscriptionId":create_uuid(), "param0": "HenryGale",
"brokerSubscriptions":[{"brokerSubscriptionId":create_uuid(), "brokerDataverse":
  "dataverse1","brokerName":"broker1","created":current_datetime()}]}
END
))
);

upsert into subscriptions as record(
(let v = (select value s from subscriptions s where param0 = "HenryGale")
select value (CASE (array_count(v) > 0)
WHEN true THEN
{"subscriptionId":v[0].subscriptionId, "param0": v[0].param0,
"brokerSubscriptions":(select value sub from v[0].brokerSubscriptions sub UNION ALL
  select value val from [{"brokerSubscriptionId":create_uuid(),
  "brokerDataverse":"dataverse1","brokerName":"broker1","created":current_datetime()}] val)}
ELSE
{"subscriptionId":create_uuid(), "param0": "HenryGale",
"brokerSubscriptions":[{"brokerSubscriptionId":create_uuid(), "brokerDataverse":
  "dataverse1","brokerName":"broker1","created":current_datetime()}]}
END
))
);

upsert into subscriptions as record(
(let v = (select value s from subscriptions s where param0 = "HenryGale")
select value (CASE (array_count(v) > 0)
WHEN true THEN
{"subscriptionId":v[0].subscriptionId, "param0": v[0].param0,
"brokerSubscriptions":(select value sub from v[0].brokerSubscriptions sub UNION ALL
  select value val from [{"brokerSubscriptionId":create_uuid(),
  "brokerDataverse":"dataverse1","brokerName":"broker1","created":current_datetime()}] val)}
ELSE
{"subscriptionId":create_uuid(), "param0": "HenryGale",
"brokerSubscriptions":[{"brokerSubscriptionId":create_uuid(), "brokerDataverse":
  "dataverse1","brokerName":"broker1","created":current_datetime()}]}
END
))
);