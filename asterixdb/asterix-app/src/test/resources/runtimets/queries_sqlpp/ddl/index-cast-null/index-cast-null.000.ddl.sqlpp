/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description  : test that CAST (DEFAULT NULL) casts to the target type such that NULL is produced for invalid input
 */

DROP DATAVERSE test IF EXISTS;
CREATE DATAVERSE test;
USE test;
CREATE TYPE t1 AS { id: int, s_f: string, d_f: double, i_f: int, b_f: boolean };
CREATE TYPE t2 AS { id: int, s_f1: string, s_f2: string?, i_f: int? };
CREATE DATASET ds1(t1) PRIMARY KEY id %with%;
CREATE DATASET ds2(t1) PRIMARY KEY id %with%;
CREATE DATASET ds3(id int not unknown) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds4(id int not unknown) OPEN TYPE PRIMARY KEY id %with%;
CREATE DATASET ds5(t2) PRIMARY KEY id %with%;

CREATE INDEX ds2_o_idx1 ON ds2(o_s_f: int, o_i_f: string) INCLUDE UNKNOWN KEY CAST (DEFAULT NULL);
CREATE INDEX ds2_o_idx2 ON ds2(o_s_f: double, o_d_f: string) CAST (DEFAULT NULL);

CREATE INDEX ds2_o_idx4 ON ds2(a.s_f: int) CAST (DEFAULT NULL);

CREATE INDEX ds2_o_idx5 ON ds2(a.any_f: int) CAST (DEFAULT NULL);
CREATE INDEX ds2_o_idx6 ON ds2(a.any_f: string) CAST (DEFAULT NULL);
CREATE INDEX ds2_o_idx7 ON ds2(a.any_f: double) CAST (DEFAULT NULL);

// temporal
CREATE INDEX ds3_o_idx_f_dt ON ds3(f_dt: datetime) CAST (DEFAULT NULL);
CREATE INDEX ds3_o_idx_f_d ON ds3(f_d: date) CAST (DEFAULT NULL);
CREATE INDEX ds3_o_idx_f_t ON ds3(f_t: time) CAST (DEFAULT NULL);

// temporal with format
CREATE INDEX ds3_o_idx_f_dt_fmt ON ds3(f_dt_fmt: datetime) CAST (DEFAULT NULL datetime 'MM/DD/YYYY hh:mm:ss.nnna');
CREATE INDEX ds3_o_idx_f_d_fmt ON ds3(f_d_fmt: date) CAST (DEFAULT NULL date 'MM/DD/YYYY');
CREATE INDEX ds3_o_idx_f_t_fmt ON ds3(f_t_fmt: time) CAST (DEFAULT NULL time 'hh:mm:ss.nnna');

CREATE INDEX ds3_o_idx_invalid_fmt ON ds3(f_d_fmt: date) CAST (DEFAULT NULL date 'invalid_format');

// on closed fields
CREATE INDEX idx1 ON ds5(s_f1);
CREATE INDEX idx2 ON ds5(s_f1: string) CAST (DEFAULT NULL);
CREATE INDEX idx3 ON ds5(s_f1: int) CAST (DEFAULT NULL);

CREATE INDEX idx4 ON ds5(s_f2);
CREATE INDEX idx5 ON ds5(s_f2: string) CAST (DEFAULT NULL);
CREATE INDEX idx6 ON ds5(s_f2: int) CAST (DEFAULT NULL);

CREATE INDEX idx7 ON ds5(i_f: int) CAST (DEFAULT NULL);
CREATE INDEX idx8 ON ds5(i_f: string) CAST (DEFAULT NULL);

CREATE INDEX idx_exc1 ON ds5(s_f2: int) EXCLUDE UNKNOWN KEY CAST (DEFAULT NULL);