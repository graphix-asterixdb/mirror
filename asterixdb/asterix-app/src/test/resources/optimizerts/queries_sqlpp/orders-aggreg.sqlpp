/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

drop  dataverse `orders-aggreg` if exists;
create  dataverse `orders-aggreg`;

use `orders-aggreg`;


create type `orders-aggreg`.OrderType as
 closed {
  oid : integer,
  cid : integer,
  orderstatus : string,
  orderpriority : string,
  clerk : string,
  total : float
};

create  nodegroup group1 if not exists  on
    asterix_nc1,
    asterix_nc2
;
create  dataset Orders(OrderType) primary key oid WITH {"node-group":{"name":"group1"}};

select element {'cid':cid,'ordpercust':`orders-aggreg`.strict_count(g),'totalcust':`orders-aggreg`.strict_sum((
        select element i.o.total
        from  g as i
    )),'avgcust':`orders-aggreg`.strict_avg((
        select element i.o.total
        from  g as i
    ))}
from  Orders as o
group by o.cid as cid group as g
;
