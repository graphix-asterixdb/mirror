/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

drop  dataverse `gby-using-orderby-desc` if exists;
create  dataverse `gby-using-orderby-desc`;

use `gby-using-orderby-desc`;


create type `gby-using-orderby-desc`.AddressType as
 closed {
  number : integer,
  street : string,
  city : string
};

create type `gby-using-orderby-desc`.CustomerType as
 closed {
  cid : integer,
  name : string,
  age : integer?,
  address : AddressType?,
  lastorder : {
      oid : integer,
      total : float
  }

};

create  nodegroup group1 if not exists  on
    asterix_nc1,
    asterix_nc2
;
create  dataset Customers(CustomerType) primary key cid WITH {"node-group":{"name":"group1"}};

select element {'name':name,'age':age}
from  Customers as c
group by c.name as name, c.age as age
order by name desc,age
;
