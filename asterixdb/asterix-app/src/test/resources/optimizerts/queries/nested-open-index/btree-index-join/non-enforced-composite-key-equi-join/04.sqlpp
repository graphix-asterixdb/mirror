/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Description  : No index join because the probe type is unknown, non-enforced nested composite key
 * Expected Res : Success
 */
drop dataverse test if exists;
create dataverse test;
use test;

create type TestOpenType as open {
  c_id: int64
};

create dataset TestOpen1(TestOpenType) primary key c_id;

create dataset TestOpen2(TestOpenType) primary key c_id;

create index idx_t2_s on TestOpen2(nested.c_s:string, nested.extra: int);

create index idx_t2_i64 on TestOpen2(nested.c_i64:int64, nested.extra: int);

create index idx_t2_i8 on TestOpen2(nested.c_i8:int8, nested.extra: int);

create index idx_t2_d on TestOpen2(nested.c_d:double, nested.extra: int);

select t1.nested.c_x as c1, t2.nested.c_x as c2
from  TestOpen1 as t1, TestOpen2 as t2
where t1.nested.c_s /*+ indexnl */ = t2.nested.c_s
order by t1.nested.c_x, t2.nested.c_x;