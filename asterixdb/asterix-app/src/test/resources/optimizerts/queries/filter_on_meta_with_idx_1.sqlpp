/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
DROP DATAVERSE test IF EXISTS;
CREATE DATAVERSE test;
USE test;

create type DocumentType as open{
  location: point,
  area_code: string,
  text: string
};

create type KVMetaType as open{
  `key`:string,
  vbucket:int32,
  seq:int64,
  cas:int64,
  expiration:int32,
  flags:int32,
  revSeq:int64,
  lockTime:int32
};

CREATE TYPE OfficerLocation AS {
  oid: int,
  location: point,
  vehicle: string
};


CREATE DATASET KVStore(DocumentType) with meta(KVMetaType) primary key meta().`key` with filter on meta().seq;
CREATE DATASET OfficerLocations(OfficerLocation) PRIMARY KEY oid;


SELECT t FROM KVStore t, OfficerLocations o
WHERE spatial_intersect(create_circle(t.location, 100.0), o.location) AND meta(t).seq > 100;