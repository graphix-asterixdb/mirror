/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

/*
 * Test plan for CH2 Q18
 */

drop dataverse test if exists;
create dataverse test;
use test;

create dataset warehouse(id uuid not unknown) open type primary key `id` autogenerated;
create dataset district(id uuid not unknown) open type primary key `id` autogenerated;
create dataset customer(id uuid not unknown) open type primary key `id` autogenerated;
create dataset history(id uuid not unknown) open type primary key `id` autogenerated;
create dataset orders(id uuid not unknown) open type primary key `id` autogenerated;
create dataset neworder(id uuid not unknown) open type primary key `id` autogenerated;
create dataset supplier(id uuid not unknown) open type primary key `id` autogenerated;
create dataset item(id uuid not unknown) open type primary key `id` autogenerated;
create dataset stock(id uuid not unknown) open type primary key `id` autogenerated;
create dataset nation(id uuid not unknown) open type primary key `id` autogenerated;
create dataset region(id uuid not unknown) open type primary key `id` autogenerated;

SELECT c.c_last, c.c_id o_id, o.o_entry_d, o.o_ol_cnt, SUM(ol.ol_amount)
FROM orders o, o.o_orderline ol, customer c
WHERE  c.c_id = o.o_c_id AND  c.c_w_id = o.o_w_id AND  c.c_d_id = o.o_d_id
GROUP BY o.o_id, o.o_w_id, o.o_d_id, c.c_id, c.c_last, o.o_entry_d, o.o_ol_cnt
HAVING SUM(ol.ol_amount) > 200
ORDER BY SUM(ol.ol_amount) DESC, o.o_entry_d
LIMIT 100;