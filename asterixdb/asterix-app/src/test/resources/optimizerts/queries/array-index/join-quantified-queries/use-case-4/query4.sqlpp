/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
SET `compiler.arrayindex` "true";

DROP DATAVERSE TestYelp IF EXISTS;
CREATE DATAVERSE TestYelp;
USE TestYelp;

CREATE TYPE CheckinType AS {
    checkin_id: uuid,
    business_id: string,
    checkin_times: [{
        checkin_times_id: int,
        dates: [string],
        times: [string]
    }]
};
CREATE TYPE CheckinDatesToMarkersType AS {
    marker: string,
    datetime: string,
    date: string,
    time: string
};

CREATE DATASET YelpCheckinA(CheckinType) PRIMARY KEY checkin_id AUTOGENERATED;
CREATE DATASET YelpCheckinB(CheckinType) PRIMARY KEY checkin_id AUTOGENERATED;
CREATE DATASET YelpCheckinDateMarkers (CheckinDatesToMarkersType) PRIMARY KEY marker;
CREATE INDEX IdxYelpCheckinDatesA ON YelpCheckinA (UNNEST checkin_times UNNEST dates) EXCLUDE UNKNOWN KEY;
CREATE INDEX IdxYelpCheckinDatesB ON YelpCheckinB (UNNEST checkin_times UNNEST dates) EXCLUDE UNKNOWN KEY;

FROM    YelpCheckinDateMarkers M, YelpCheckinA A, YelpCheckinB B
WHERE   ( SOME AND EVERY CT IN A.checkin_times
          SATISFIES SOME AND EVERY D IN CT.dates
                    SATISFIES D /*+ indexnl */ = M.date ) AND
        ( SOME AND EVERY CT IN B.checkin_times
          SATISFIES SOME AND EVERY D IN CT.dates
                    SATISFIES D /*+ indexnl */ = M.date )
SELECT  COUNT(*);
