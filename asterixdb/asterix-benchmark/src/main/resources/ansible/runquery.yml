# ------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
# ------------------------------------------------------------

# This script requires extra variables if the caller wants to report numbers:
# -- result_url
# -- metric

- hosts: [localhost,]
  vars:
     service: "http://{{ groups['cc'][0] }}:{{ service_port }}/{{ service_endpoint }}"
     temp_file: "/tmp/query_var.yml"

  tasks:
    - include_vars: ../conf/benchmark_setting.yml

    - name: Execute query {{ query_file }}
      uri:
        url: "{{ service }}"
        method: POST
        body: "{{ lookup('file', query_file ) }}"
        headers:
          Content-Type: "text/plain"
        timeout: 3600
      register: response

    - name: Extract execution time
      shell: printf "exec_time{{':'}} {{ response.json.metrics.elapsedTime | regex_replace('m*s', '') | int }}\n" > "{{ temp_file }}"
      when: report

    - include_vars: "{{ temp_file }}"
      when: report

    - name: Report execution time
      uri:
          url: "{{ result_url }}"
          method: POST
          body: "{\"group\": \"{{ query_file | basename }}\", \"metric\": \"{{ metric }}\", \"value\": {{ exec_time }} }"
          body_format: json
          timeout: 3600
          status_code: 201
      when: report

    - name: Delete the temporary file
      file:
        path: "{{ temp_file }}"
        state: absent
      when: report